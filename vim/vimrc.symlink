" Use Vim settings, rather then Vi settings.
" This must be first, because it changes other options as a side effect.
set nocompatible


""" Filetype Detection

filetype on                         " enable filetype detection
filetype indent on                  " enable filetype-specific indenting
filetype plugin on                  " enable filetype-specific plugins


""" Syntax Highlighting

syntax enable


""" General Configuration

set encoding=utf-8                  " set utf-8 encoding
set backspace=indent,eol,start      " allow backspacing over everything
set history=1000                    " store lots of :cmdline history
set showcmd                         " show incomplete cmds down the bottom
set showmode                        " show current mode down the bottom
set wildmenu                        " enable wildmenu for completion
set gcr=a:blinkon0                  " disable cursor blink
set visualbell                      " silence
set report=0                        " tell us about changes

" To reload files changed outside vim, enable 'autoread'.
" set autoread

" This makes vim act like all other editors, buffers can
" exist in the background without being in a window.
" set hidden

" Change leader to a comma. All \x commands turn into ,x.
" The mapleader has to be set before loading plugins.
let mapleader = ','


""" Configure Backup and Swap Files

set noswapfile                      " not using swap files
set nobackup                        " no persistent backup
set writebackup                     " write a temporary backup file


""" Indentation

set autoindent                      " indent according to previous line
set smartindent                     " guess new line indentation level
set shiftwidth=2                    " auto-indent depth
set softtabstop=2                   " yep, two
set tabstop=4                       " real tabs are 4 spaces
set expandtab                       " no real tabs please!
set nosmarttab                      " fuck tabs


""" Formatting

set formatoptions+=j                " remove comment chars when joining lines
set nojoinspaces                    " only insert single space after '.', '?'
                                    " and '!' with join command


""" Visual Cues

set showmatch                       " brackets/braces that is
set mat=5                           " duration to show matching brace (1/10 sec)
set listchars=tab:▸\ ,trail:·,eol:¬ " chars for invisibles
set listchars+=precedes:<,extends:> " indicators for lines longer than window
set nolist                          " print non-printable characters


""" Search

set incsearch                       " perform incremental search
set ignorecase                      " ignore case when searching


""" Navigation

set ruler
set scrolloff=3                     " keep at least 3 lines above/below
set sidescrolloff=3                 " at least 3 columns left/right (w/ nowrap)


""" Splits

set splitbelow                      " put new window below the current one
set splitright                      " put new window right of the current one


""" Mappings

nnoremap <tab> gt
nnoremap <s-tab> gT


""" Functions

" Strip trailing whitespace:
map <leader>s :%s/\s\+$//gc<cr>


""" Use vim-plug to manage vim bundles:

call plug#begin('~/.vim/plugged')

Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-vinegar'
Plug 'tpope/vim-dispatch'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'mileszs/ack.vim'
Plug 'editorconfig/editorconfig-vim'

Plug 'sheerun/vim-polyglot'
Plug 'sirver/ultisnips'

call plug#end()


""" Plugin Configuration

" Hide ignored files from CtrlP.
let g:ctrlp_user_command = {
  \ 'types': {
    \ 1: ['.git', 'cd %s && git ls-files --cached --other --exclude-standard'],
    \ 2: ['.hg', 'hg --cwd %s locate -I .'],
    \ },
  \ 'fallback': 'find %s -type f'
  \ }

" Disable caching in CtrlP.
let g:ctrlp_use_caching = 0

" Use `ag` for searching if available (partially supports 'ignore' files).
if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif

" Disable editor config for vim-fugitive and remote files.
let g:EditorConfig_exclude_patterns = ['fugitive://.*', 'scp://.*']

" Configure vim-polyglot language packs.
let g:polyglot_disabled = ['css', 'yaml']

" Configure custom snippet directory names and suppress 'no python' warnings.
let g:UltiSnipsSnippetDirectories=["snips"]
let g:UltiSnipsNoPythonWarning = 1
